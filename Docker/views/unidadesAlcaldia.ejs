<%- include("template/cabecera", {titulo: "Unidades por alcaldía"}) %>
    
  <div class="mt-3 d-flex justify-content-center">
    <h1>Unidades por alcaldía</h1>
    <input type="text" id="getRegistros" style="display: none" value="<%= unidadesAlcaldia %>">
  </div>

  <div id="unidadesAlcaldiaTable" class="container d-flex justify-content-center" style="text-align:center;"> 
  </div>

  <div id="alertSinRegistros">
  </div>
  <div class="mt-2 d-flex justify-content-center">
    <nav aria-label="Page navigation example">
      <ul class="pagination">
        <li onclick='prevPag()' class="page-item"><a class="page-link">Anterior</a></li>
        <div id="numPagina">
        </div>
        <li onclick='nextPag()' class="page-item"><a class="page-link">Siguiente</a></li>
      </ul>
    </nav>
  </div>

<%- include("template/footer")%>

<script>

  //Obtener el valor del input que nos indicará el número de páginas a crear
  const totalRegistros = document.getElementById("getRegistros").value
  let pags = 0;
  let proxPag = 1;
  let rowCount= -1;

  const cargarRegistros = async(prev,next, flag) => {

    if(flag == 1){
      let nuevoP = next * prev //18 * 2 = 36 Último número de idRegistro a pintar del nuevo rango
      let nuevoN; //Primer número de idRegistro a pintar del nuevo rango
      
      if(prev>1){
        nuevoN = nuevoP - 18
        prev = nuevoN
        next = nuevoP
      }

    }

    try {

      const data = await fetch(`/unidadesAlcaldia/todos`)
      //Obtener la respuesta del servidor en json
      const res = await data.json()

      crearElementoTab()

      if(proxPag>=1){

        eliminarElementoTab()
        crearElementoTab()

      }
      
      let table = document.createElement('table');
      table.setAttribute("class", "table");
      let thead = document.createElement('thead');
      let tbody = document.createElement('tbody');

      table.appendChild(thead);
      table.appendChild(tbody);

      // Adding the entire table to the body tag
      document.getElementById('divTable').appendChild(table);

      // Creating and adding data to first row of the table
      let row1 = document.createElement('tr');
      let heading1 = document.createElement('th');
      heading1.innerHTML = "Alcaldía";
      let heading2 = document.createElement('th');
      heading2.innerHTML = "Id vehículo";
  

      row1.appendChild(heading1);
      row1.appendChild(heading2);
    
      thead.appendChild(row1);
    

      //Se dibujan los registros de la tabla
      for(let i=prev; i <= next; i++) {

        row2 = document.createElement('tr')
        row2data = document.createElement('td')
        row2data.innerHTML = res[i].nombreAlcaldia
        row2data2 = document.createElement('td')
        row2data2.innerHTML = res[i].idVehicle

        row2.appendChild(row2data)
        row2.appendChild(row2data2)

        tbody.appendChild(row2);

      }

      //li que indica el número de página
      document.querySelector('#numPagina').innerHTML = `<li class="page-item"><a class="page-link">Página ${proxPag}</a></li>`
      
    } catch (error) {
      console.log("Es un error en cargarRegistros" + error)
    }
  }


  if(totalRegistros > 0){

    //Total de páginas de acuerdo a los registros recibidos
    pags = Math.round(totalRegistros/18)

    //ejecuta el paginado
    cargarRegistros(proxPag,18,2)

  }else{

    //Crear el alert en caso que no existan registros
    let alert = document.createElement('div')
    alert.innerHTML = '<div id="alertMostrado" class="mt-5 mb-5 alert alert-primary alert-dismissible d-flex justify-content-center" role="alert">No hay registros que mostrar.<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>'
    document.getElementById('alertSinRegistros').appendChild(alert)
  
  }
  
  //Función que se ejecuta al darle clic a Siguiente
  const nextPag = () => {

    //Si existe el alert lo eliminará
    eliminarAlert()

    if(proxPag<pags){

      proxPag = proxPag + 1

      //ejecuta el paginado
      cargarRegistros(proxPag,18,1)

    }else{
      //console.log("Excedio el numero de paginas")

      excedeNumPag()

    }

  }

  const prevPag = () => {

    //Si existe el alert lo eliminará
    eliminarAlert()

    //Calcula la pagina anterior
    proxPag = proxPag - 1
  
    //proxPag indicará el inicio de nuestros rangos
    let fin = proxPag * 18;
    let inicio = fin - 18;
    
    if(proxPag > 0 ){

      //ejecuta el paginado
      cargarRegistros(inicio,fin,0)

    }else{

      proxPag = 1

      excedeNumPag()

    }

  }

  const eliminarAlert = () => {

    //Eliminar el alert si existe en el dom antes de la próxima consulta
    let existe = !!document.getElementById("alertMostrado");
    existe ? document.getElementById("alertMostrado").remove() : ''

  }

  const excedeNumPag = () => {

    //Crear el alert en caso que no existan más registros, devuelve un valor booleano
    let existe = !!document.getElementById("alertMostrado");

    if(!existe){

      let alert = document.createElement('div')
      alert.innerHTML = '<div id="alertMostrado" class="mt-5 mb-5 alert alert-primary alert-dismissible d-flex justify-content-center" role="alert">No hay más registros que mostrar.<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>'
      document.getElementById('alertSinRegistros').appendChild(alert)

    }

  }

  const crearElementoTab = () => {

    let divTable = document.createElement('div')
    divTable.innerHTML = '<div id="divTable"></div>'
    document.getElementById('unidadesAlcaldiaTable').appendChild(divTable)

  }

  const eliminarElementoTab = () => {

    //Eliminar el alert si existe en el dom antes de la próxima consulta
    let existe = !!document.getElementById("divTable");
    existe ? document.getElementById("divTable").remove() : ''
  
  }

</script>